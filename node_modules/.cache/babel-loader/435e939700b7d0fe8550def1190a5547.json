{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/heroku/src/components/admin/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport { Alerta } from \"./Alerta\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport axios from \"axios\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({});\n  const [{\n    open,\n    message,\n    emoji\n  }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\"\n  });\n  const [disabledBtn, setDisabledBtn] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [{\n    email,\n    password,\n    closeSesion\n  }, handleChange] = useForm({\n    email: \"\",\n    password: \"\",\n    closeSesion: false\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\"\n    });\n    dispatch(login(user));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = validForm();\n\n    if (Object.keys(errors).length === 0) {\n      setDisabledBtn(true);\n\n      try {\n        const {\n          data\n        } = await axios.post(\"https://kikoya-portal.herokuapp.com/api/v1/login/api_key\", {\n          email: email,\n          password: password\n        });\n\n        if (data.user_type.id === 1) {\n          const tokenData = await getToken(data.api_key);\n          setUser({\n            api_key: data.api_key,\n            userName: tokenData.user.username,\n            email: tokenData.user.email,\n            tokenAccess: tokenData.access,\n            tokenRefresh: tokenData.refresh,\n            name: tokenData.user.name,\n            userType: tokenData.user.user_type.id,\n            closeSesion: closeSesion\n          });\n          updAlerta(\"Tu sesión se inicio correctamente.\", \"👍\");\n        } else {\n          updAlerta(\"No cuentas con los permisos necesarios para ingresar al portal de Administración.\", \"\");\n        }\n      } catch (error) {\n        console.log(error);\n        updAlerta(\"Correo o contraseña Inválidos\", \"⚠️\");\n      }\n    }\n  };\n\n  const getToken = async api_key => {\n    try {\n      const {\n        data\n      } = await axios.post(\"https://kikoya-portal.herokuapp.com/api/v1/login/token\", {\n        api_key,\n        host: \"sandbox001369cd406f49aa875bd8f230a0de80.mailgun.org\"\n      });\n      return data;\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n\n      if (data.detail === \"This user has expired\") {\n        updAlerta(\"El usuario ha expirado.\", \"⚠️\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji) => {\n    setOpen({\n      open: true,\n      message,\n      emoji\n    });\n    setDisabledBtn(false);\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n\n    if (!validator.isEmail(email)) {\n      errors.email = \"ingrese un email valido\";\n    }\n\n    if (validator.isEmpty(email)) {\n      errors.email = \"Campo obligatorio\";\n    }\n\n    if (validator.isEmpty(password)) {\n      errors.password = \"Campo obligatorio\";\n    }\n\n    setErrors(errors);\n    return errors;\n  };\n\n  const handleInputPress = e => {\n    let error = \"\";\n\n    switch (e.target.name) {\n      case \"email\":\n        if (!validator.isEmail(e.target.value)) {\n          error = \"Ingrese un email valido\";\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors,\n      [e.target.name]: error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginAdmin__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginAdmin_form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login__titulo\",\n        children: \"Inicia Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginAdmin__containerInput\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"loginAdmin__input\",\n          label: \"Correo\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange,\n          onKeyUp: handleInputPress,\n          error: errors.email ? true : false,\n          helperText: errors.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginAdmin__containerInput\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"loginAdmin__input\",\n          label: \"Contrase\\xF1a\",\n          name: \"password\",\n          size: \"small\",\n          type: \"password\",\n          value: password,\n          onChange: handleChange,\n          onKeyUp: handleInputPress,\n          error: errors.password ? true : false,\n          helperText: errors.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerRecoveryLogin\",\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"end\",\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"closeSesion\",\n            value: closeSesion,\n            onChange: handleChange,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"13px\"\n            },\n            children: \"No cerrar sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 20\n          }, this),\n          labelPlacement: \"end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            fontSize: \"13px\",\n            textAlign: \"right\"\n          },\n          className: \"forgotPass\",\n          to: \"/auth/user/recovery\",\n          children: [\"\\xBFOlvidaste tu contrase\\xF1a? \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Recuperala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginAdmin__container_ingresar\",\n        children: disabledBtn ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            alignSelf: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            width: \"100%\",\n            display: \"block\",\n            padding: \"15px 0\",\n            margin: \"15px 0\",\n            maxWidth: \"400px\"\n          },\n          color: \"primary\",\n          type: \"submit\",\n          children: \"INICIAR SESI\\xD3N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          display: \"block\",\n          margin: \"8px 0\"\n        },\n        to: \"/auth/user/registro\",\n        className: \"forgotPass\",\n        children: [\"\\xBFNo tienes cuenta? \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Registrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alerta, {\n      open: open,\n      message: message,\n      emoji: emoji,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"X2b7kj/e43LqYv3UHCi900O57Hs=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/components/admin/Login/Login.js"],"names":["React","useState","TextField","Button","FormControlLabel","Checkbox","validator","Link","Alerta","useForm","axios","CircularProgress","useDispatch","login","Login","dispatch","user","setUser","open","message","emoji","setOpen","disabledBtn","setDisabledBtn","errors","setErrors","email","password","closeSesion","handleChange","handleClose","handleSubmit","e","preventDefault","validForm","Object","keys","length","data","post","user_type","id","tokenData","getToken","api_key","userName","username","tokenAccess","access","tokenRefresh","refresh","name","userType","updAlerta","error","console","log","host","response","detail","isEmail","isEmpty","handleInputPress","target","value","fontSize","textAlign","alignSelf","width","display","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport validator from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport { Alerta } from \"./Alerta\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport axios from \"axios\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../../actions/auth\";\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({});\n\n  const [{ open, message, emoji }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\",\n  });\n  const [disabledBtn, setDisabledBtn] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [{ email, password, closeSesion }, handleChange] = useForm({\n    email: \"\",\n    password: \"\",\n    closeSesion: false,\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\",\n    });\n    dispatch(login(user));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = validForm();\n    if (Object.keys(errors).length === 0) {\n      setDisabledBtn(true);\n      try {\n        const { data } = await axios.post(\n          \"https://kikoya-portal.herokuapp.com/api/v1/login/api_key\",\n          {\n            email: email,\n            password: password,\n          }\n        );\n        if (data.user_type.id === 1) {\n          const tokenData = await getToken(data.api_key);\n          setUser({\n            api_key: data.api_key,\n            userName: tokenData.user.username,\n            email: tokenData.user.email,\n            tokenAccess: tokenData.access,\n            tokenRefresh: tokenData.refresh,\n            name: tokenData.user.name,\n            userType: tokenData.user.user_type.id,\n            closeSesion: closeSesion,\n          });\n          updAlerta(\"Tu sesión se inicio correctamente.\", \"👍\");\n        } else {\n          updAlerta(\n            \"No cuentas con los permisos necesarios para ingresar al portal de Administración.\",\n            \"\"\n          );\n        }\n      } catch (error) {\n        console.log(error);\n        updAlerta(\"Correo o contraseña Inválidos\", \"⚠️\");\n      }\n    }\n  };\n\n  const getToken = async (api_key) => {\n    try {\n      const { data } = await axios.post(\n        \"https://kikoya-portal.herokuapp.com/api/v1/login/token\",\n        {\n          api_key,\n          host: \"sandbox001369cd406f49aa875bd8f230a0de80.mailgun.org\",\n        }\n      );\n      return data;\n    } catch (error) {\n      const { data } = error.response;\n      if (data.detail === \"This user has expired\") {\n        updAlerta(\"El usuario ha expirado.\", \"⚠️\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji) => {\n    setOpen({\n      open: true,\n      message,\n      emoji,\n    });\n    setDisabledBtn(false);\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n    if (!validator.isEmail(email)) {\n      errors.email = \"ingrese un email valido\";\n    }\n\n    if (validator.isEmpty(email)) {\n      errors.email = \"Campo obligatorio\";\n    }\n\n    if (validator.isEmpty(password)) {\n      errors.password = \"Campo obligatorio\";\n    }\n\n    setErrors(errors);\n\n    return errors;\n  };\n\n  const handleInputPress = (e) => {\n    let error = \"\";\n    switch (e.target.name) {\n      case \"email\":\n        if (!validator.isEmail(e.target.value)) {\n          error = \"Ingrese un email valido\";\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors, [e.target.name]: error });\n  };\n\n  return (\n    <div className=\"loginAdmin__container\">\n      <form className=\"loginAdmin_form\" onSubmit={handleSubmit}>\n        <h1 className=\"login__titulo\">Inicia Sesión</h1>\n        <div className=\"loginAdmin__containerInput\">\n          <TextField\n            className=\"loginAdmin__input\"\n            label=\"Correo\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            onKeyUp={handleInputPress}\n            error={errors.email ? true : false}\n            helperText={errors.email && errors.email}\n          />\n        </div>\n        <div className=\"loginAdmin__containerInput\">\n          <TextField\n            className=\"loginAdmin__input\"\n            label=\"Contraseña\"\n            name=\"password\"\n            size=\"small\"\n            type=\"password\"\n            value={password}\n            onChange={handleChange}\n            onKeyUp={handleInputPress}\n            error={errors.password ? true : false}\n            helperText={errors.password && errors.password}\n          />\n        </div>\n\n        <div className=\"containerRecoveryLogin\">\n          <FormControlLabel\n            value=\"end\"\n            control={\n              <Checkbox\n                name=\"closeSesion\"\n                value={closeSesion}\n                onChange={handleChange}\n                color=\"primary\"\n              />\n            }\n            label={<span style={{ fontSize: \"13px\" }}>No cerrar sesión</span>}\n            labelPlacement=\"end\"\n          />\n          <Link\n            style={{ fontSize: \"13px\", textAlign: \"right\" }}\n            className=\"forgotPass\"\n            to=\"/auth/user/recovery\"\n          >\n            ¿Olvidaste tu contraseña? <b>Recuperala</b>\n          </Link>\n        </div>\n        <div className=\"loginAdmin__container_ingresar\">\n          {disabledBtn ? (\n            <CircularProgress style={{ alignSelf: \"center\" }} />\n          ) : (\n            <Button\n              variant=\"contained\"\n              style={{\n                width: \"100%\",\n                display: \"block\",\n                padding: \"15px 0\",\n                margin: \"15px 0\",\n                maxWidth: \"400px\",\n              }}\n              color=\"primary\"\n              type=\"submit\"\n            >\n              INICIAR SESIÓN\n            </Button>\n          )}\n        </div>\n        <Link\n          style={{ display: \"block\", margin: \"8px 0\" }}\n          to=\"/auth/user/registro\"\n          className=\"forgotPass\"\n        >\n          ¿No tienes cuenta? <b>Registrate</b>\n        </Link>\n      </form>\n      <Alerta\n        open={open}\n        message={message}\n        emoji={emoji}\n        handleClose={handleClose}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}