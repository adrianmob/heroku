{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useForm = (initialState = {}) => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n\n  const handleChange = ({\n    target\n  }) => {\n    if (target.type === \"checkbox\") {\n      setValues({ ...values,\n        [target.name]: target.checked\n      });\n    } else {\n      setValues({ ...values,\n        [target.name]: target.value\n      });\n    }\n  };\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const changeValue = value => {\n    setValues(value);\n  };\n\n  return [values, handleChange, changeValue, reset];\n};\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/hooks/useForm.js"],"names":["useState","useForm","initialState","values","setValues","handleChange","target","type","name","checked","value","reset","changeValue"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,YAAD,CAApC;;AAEA,QAAMG,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9BH,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAACG,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAAnC,OAAD,CAAT;AACD,KAFD,MAEO;AACLL,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,SAACG,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACI;AAAnC,OAAD,CAAT;AACD;AACF,GAND;;AAQA,QAAMC,KAAK,GAAG,MAAM;AAClBP,IAAAA,SAAS,CAACF,YAAD,CAAT;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAIF,KAAD,IAAW;AAC7BN,IAAAA,SAAS,CAACM,KAAD,CAAT;AACD,GAFD;;AAIA,SAAO,CAACP,MAAD,EAASE,YAAT,EAAuBO,WAAvB,EAAoCD,KAApC,CAAP;AACD,CApBM;;GAAMV,O","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const handleChange = ({ target }) => {\n    if (target.type === \"checkbox\") {\n      setValues({ ...values, [target.name]: target.checked });\n    } else {\n      setValues({ ...values, [target.name]: target.value });\n    }\n  };\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const changeValue = (value) => {\n    setValues(value);\n  }\n\n  return [values, handleChange, changeValue, reset];\n};"]},"metadata":{},"sourceType":"module"}