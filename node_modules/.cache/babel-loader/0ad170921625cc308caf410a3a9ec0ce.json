{"ast":null,"code":"import { types } from \"../types/types\";\nexport const login = ({\n  api_key,\n  userName,\n  email,\n  tokenAccess,\n  tokenRefresh,\n  name,\n  userType,\n  closeSesion\n}) => ({\n  type: types.login,\n  payload: {\n    api_key,\n    userName,\n    email,\n    tokenAccess,\n    tokenRefresh,\n    name,\n    userType,\n    closeSesion\n  }\n});\nexport const logout = () => ({\n  type: types.logout\n});\nexport const checkingLogin = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user_kikoya\"));\n\n    if (user) {\n      if (user.closeSesion) {\n        dispatch(login(user));\n      } else {\n        localStorage.removeItem(\"user_kikoya\");\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/actions/auth.js"],"names":["types","login","api_key","userName","email","tokenAccess","tokenRefresh","name","userType","closeSesion","type","payload","logout","checkingLogin","dispatch","user","JSON","parse","localStorage","getItem","removeItem"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,QAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA,YALoB;AAMpBC,EAAAA,IANoB;AAOpBC,EAAAA,QAPoB;AAQpBC,EAAAA;AARoB,CAAD,MASd;AACLC,EAAAA,IAAI,EAAEV,KAAK,CAACC,KADP;AAELU,EAAAA,OAAO,EAAE;AACPT,IAAAA,OADO;AAEPC,IAAAA,QAFO;AAGPC,IAAAA,KAHO;AAIPC,IAAAA,WAJO;AAKPC,IAAAA,YALO;AAMPC,IAAAA,IANO;AAOPC,IAAAA,QAPO;AAQPC,IAAAA;AARO;AAFJ,CATc,CAAd;AAuBP,OAAO,MAAMG,MAAM,GAAG,OAAO;AAC3BF,EAAAA,IAAI,EAAEV,KAAK,CAACY;AADe,CAAP,CAAf;AAIP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnB,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAb;;AACA,QAAIJ,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACN,WAAT,EAAsB;AACpBK,QAAAA,QAAQ,CAACb,KAAK,CAACc,IAAD,CAAN,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,YAAY,CAACE,UAAb,CAAwB,aAAxB;AACD;AACF;AACF,GATD;AAUD,CAXM","sourcesContent":["import { types } from \"../types/types\";\nexport const login = ({\n  api_key,\n  userName,\n  email,\n  tokenAccess,\n  tokenRefresh,\n  name,\n  userType,\n  closeSesion,\n}) => ({\n  type: types.login,\n  payload: {\n    api_key,\n    userName,\n    email,\n    tokenAccess,\n    tokenRefresh,\n    name,\n    userType,\n    closeSesion,\n  },\n});\n\nexport const logout = () => ({\n  type: types.logout,\n});\n\nexport const checkingLogin = () => {\n  return (dispatch) => {\n    const user = JSON.parse(localStorage.getItem(\"user_kikoya\"));\n    if (user) {\n      if (user.closeSesion) {\n        dispatch(login(user));\n      } else {\n        localStorage.removeItem(\"user_kikoya\");\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}