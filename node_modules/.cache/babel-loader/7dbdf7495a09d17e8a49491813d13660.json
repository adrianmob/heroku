{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/heroku/src/routers/PublicRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/admin/clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = PublicRoute;\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/routers/PublicRoute.js"],"names":["React","Redirect","Route","PropTypes","PublicRoute","isAuthenticated","component","Component","rest","props","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC1BC,EAAAA,eAD0B;AAE1BC,EAAAA,SAAS,EAAEC,SAFe;AAG1B,KAAGC;AAHuB,CAAD,KAIrB;AACJ,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,SAAS,EAAGC,KAAD,IACT,CAACJ,eAAD,gBACE,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBM;KAAML,W;AAmBbA,WAAW,CAACM,SAAZ,GAAwB;AACtBL,EAAAA,eAAe,EAAEF,SAAS,CAACQ,IAAV,CAAeC,UADV;AAEtBN,EAAAA,SAAS,EAAEH,SAAS,CAACU,IAAV,CAAeD;AAFJ,CAAxB","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/admin/clientes\" />\n        )\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}