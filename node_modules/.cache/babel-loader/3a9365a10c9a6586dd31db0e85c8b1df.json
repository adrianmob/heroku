{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/heroku/src/components/user/RecoveryPass/RecoveryPass.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button, IconButton } from \"@material-ui/core\";\nimport { useStyles } from \"../../../hooks/useStyle\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Alerta } from \"../Alerta\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport validator from \"validator\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RecoveryPass = () => {\n  _s();\n\n  const history = useHistory();\n  const user = \"admin@gmail.com\";\n  const classes = useStyles();\n  const [{\n    open,\n    message,\n    emoji,\n    success\n  }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\",\n    success: false\n  });\n  const [errors, setErrors] = useState({});\n  const [{\n    email\n  }, handleChange] = useForm({\n    email: \"\"\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\",\n      success: false\n    });\n    if (success) history.push(\"/auth/user/changepassword\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = validForm();\n\n    if (Object.keys(errors).length === 0) {\n      // if (email === user) {\n      //   updAlerta(\n      //     \"Se envio correctamente el corre, recibirás un correo electrónico con instrucciones sobre cómo restablecer tu contraseña.\",\n      //     \"✅\",\n      //     true\n      //   );\n      // } else {\n      //   updAlerta(\"El correo no existe.\", \"⚠️\");\n      // }\n      try {\n        const {\n          data\n        } = await axios.post(\"https://kikoya-portal.herokuapp.com/api/v1/user/recovery_password/\", {\n          host: \"sandbox001369cd406f49aa875bd8f230a0de80.mailgun.org\",\n          email\n        });\n        console.log(data);\n      } catch (error) {\n        console.log(error.response);\n        updAlerta(\"Algo salio mal en el servidor\", \"⚠️\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji, success = false) => {\n    setOpen({\n      open: true,\n      message,\n      emoji,\n      success\n    });\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n\n    if (!validator.isEmail(email)) {\n      errors.email = \"Ingrese un email valido.\";\n    }\n\n    setErrors(errors);\n    return errors;\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleInputPress = e => {\n    let error = \"\";\n\n    switch (e.target.name) {\n      case \"email\":\n        if (!validator.isEmail(e.target.value)) {\n          error = \"Ingrese un email valido\";\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors,\n      [e.target.name]: error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_back\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleBack,\n          style: {\n            color: \"#FCBB13\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registro__form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titulo\",\n            children: \"Recupera tu contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"informacion_parrafo\",\n            children: \"Ingresa el correo con el cual te registraste y te enviaremos las instrucciones para recuperarla.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registro__containerInput\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"registro__input\",\n              label: \"Correo\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange,\n              onKeyUp: handleInputPress,\n              error: errors.email ? true : false,\n              helperText: errors.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.primary,\n            style: {\n              width: \"100%\",\n              display: \"block\",\n              padding: \"15px 0\",\n              margin: \"15px 0\",\n              maxWidth: \"400px\"\n            },\n            type: \"submit\",\n            children: \"Enviar correo de confirmaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              display: \"block\",\n              margin: \"8px 0\"\n            },\n            className: \"forgotPass\",\n            children: [\"\\xBFNo te llego el correo? Reenviar correo\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"capaLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alerta, {\n        open: open,\n        message: message,\n        emoji: emoji,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecoveryPass, \"C/yLFK8ZaKzb2h00qmZG+nW2/YI=\", false, function () {\n  return [useHistory, useStyles, useForm];\n});\n\n_c = RecoveryPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoveryPass\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/components/user/RecoveryPass/RecoveryPass.js"],"names":["React","useState","TextField","Button","IconButton","useStyles","useForm","Alerta","useHistory","Link","validator","ArrowBackIcon","axios","RecoveryPass","history","user","classes","open","message","emoji","success","setOpen","errors","setErrors","email","handleChange","handleClose","push","handleSubmit","e","preventDefault","validForm","Object","keys","length","data","post","host","console","log","error","response","updAlerta","isEmail","handleBack","goBack","handleInputPress","target","name","value","isEmpty","color","primary","width","display","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, IconButton } from \"@material-ui/core\";\nimport { useStyles } from \"../../../hooks/useStyle\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Alerta } from \"../Alerta\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport validator from \"validator\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport axios from \"axios\";\n\nexport const RecoveryPass = () => {\n  const history = useHistory();\n  const user = \"admin@gmail.com\";\n  const classes = useStyles();\n  const [{ open, message, emoji, success }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\",\n    success: false,\n  });\n  const [errors, setErrors] = useState({});\n\n  const [{ email }, handleChange] = useForm({\n    email: \"\",\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\",\n      success: false,\n    });\n    if (success) history.push(\"/auth/user/changepassword\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = validForm();\n    if (Object.keys(errors).length === 0) {\n      // if (email === user) {\n      //   updAlerta(\n      //     \"Se envio correctamente el corre, recibirás un correo electrónico con instrucciones sobre cómo restablecer tu contraseña.\",\n      //     \"✅\",\n      //     true\n      //   );\n      // } else {\n      //   updAlerta(\"El correo no existe.\", \"⚠️\");\n      // }\n      try {\n        const { data } = await axios.post(\n          \"https://kikoya-portal.herokuapp.com/api/v1/user/recovery_password/\",\n          {\n            host: \"sandbox001369cd406f49aa875bd8f230a0de80.mailgun.org\",\n            email,\n          }\n        );\n\n        console.log(data);\n      } catch (error) {\n        console.log(error.response);\n        updAlerta(\"Algo salio mal en el servidor\", \"⚠️\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji, success = false) => {\n    setOpen({\n      open: true,\n      message,\n      emoji,\n      success,\n    });\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n\n    if (!validator.isEmail(email)) {\n      errors.email = \"Ingrese un email valido.\";\n    }\n\n    setErrors(errors);\n\n    return errors;\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleInputPress = (e) => {\n    let error = \"\";\n    switch (e.target.name) {\n      case \"email\":\n        if (!validator.isEmail(e.target.value)) {\n          error = \"Ingrese un email valido\";\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors, [e.target.name]: error });\n  };\n\n  return (\n    <>\n      <div className=\"registro__container\">\n        <div className=\"container_back\">\n          <IconButton onClick={handleBack} style={{ color: \"#FCBB13\" }}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <div className=\"registro__form\">\n          <form onSubmit={handleSubmit}>\n            <h1 className=\"titulo\">Recupera tu contraseña</h1>\n            <p className=\"informacion_parrafo\">\n              Ingresa el correo con el cual te registraste y te enviaremos las\n              instrucciones para recuperarla.\n            </p>\n            <div className=\"registro__containerInput\">\n              <TextField\n                className=\"registro__input\"\n                label=\"Correo\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                onKeyUp={handleInputPress}\n                error={errors.email ? true : false}\n                helperText={errors.email && errors.email}\n              />\n            </div>\n            <Button\n              variant=\"contained\"\n              className={classes.primary}\n              style={{\n                width: \"100%\",\n                display: \"block\",\n                padding: \"15px 0\",\n                margin: \"15px 0\",\n                maxWidth: \"400px\",\n              }}\n              type=\"submit\"\n            >\n              Enviar correo de confirmación\n            </Button>\n            <Link\n              style={{ display: \"block\", margin: \"8px 0\" }}\n              className=\"forgotPass\"\n            >\n              ¿No te llego el correo? Reenviar correo{\" \"}\n            </Link>\n          </form>\n        </div>\n        <div className=\"capaLogo\"></div>\n        <Alerta\n          open={open}\n          message={message}\n          emoji={emoji}\n          handleClose={handleClose}\n        />\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}