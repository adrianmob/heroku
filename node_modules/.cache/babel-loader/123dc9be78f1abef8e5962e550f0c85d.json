{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/heroku/src/components/admin/Home/Configuracion/Branding/Colors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { ChromePicker } from \"react-color\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Colors = () => {\n  _s();\n\n  const [color, setColor] = useState({\n    displayColorPicker: false,\n    changeColor: \"#18e7f4\",\n    defaultColor: \"#18e7f4\",\n    color: {\n      r: \"26\",\n      g: \"230\",\n      b: \"244\",\n      a: \"1\"\n    }\n  });\n  const colors = [\"#18e7f4\", \" #ed90fc\", \"#ffe142\", \"#f28c2d\", \"#93f764\"];\n  const [anchor, setAnchor] = useState(null);\n\n  const handleChangeColor = color => {\n    deleteClassActive();\n    setColor({ ...color,\n      color: color.rgb,\n      changeColor: color.hex\n    });\n  };\n\n  const handleOpenPicker = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClosePicker = () => {\n    setAnchor(null);\n  };\n\n  const handleColorRectClick = (event, background) => {\n    deleteClassActive();\n    setColor({ ...color,\n      changeColor: background\n    });\n    event.target.classList.add(\"color_active\");\n  };\n\n  const deleteClassActive = () => {\n    let colorsRect = document.querySelectorAll(\".branding__color\");\n    colorsRect.forEach(color => {\n      color.classList.remove(\"color_active\");\n    });\n  };\n\n  const open = Boolean(anchor);\n  const brightness = Math.round((parseInt(color.color.r) * 299 + parseInt(color.color.g) * 587 + parseInt(color.color.b) * 114) / 1000);\n  const textColour = brightness > 125 ? \"black\" : \"white\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branding_container_colors\",\n      children: [colors.map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: color\n        },\n        className: \"branding__color\",\n        onClick: e => {\n          handleColorRectClick(e, color);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"branding__color\",\n        onClick: handleOpenPicker,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        anchorEl: anchor,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: open,\n        onClose: handleClosePicker,\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: color.color,\n          onChange: handleChangeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branding_container_picker\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          backgroundColor: color.changeColor,\n          color: textColour\n        },\n        value: color.changeColor,\n        className: \"branding__input\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Colors, \"OWNlDoGBEppHhuJtZeZxQ1fE9LA=\");\n\n_c = Colors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/components/admin/Home/Configuracion/Branding/Colors.js"],"names":["React","useState","IconButton","AddIcon","ChromePicker","Popover","Colors","color","setColor","displayColorPicker","changeColor","defaultColor","r","g","b","a","colors","anchor","setAnchor","handleChangeColor","deleteClassActive","rgb","hex","handleOpenPicker","event","currentTarget","handleClosePicker","handleColorRectClick","background","target","classList","add","colorsRect","document","querySelectorAll","forEach","remove","open","Boolean","brightness","Math","round","parseInt","textColour","map","idx","e","vertical","horizontal","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { ChromePicker } from \"react-color\";\nimport Popover from \"@material-ui/core/Popover\";\n\nexport const Colors = () => {\n  const [color, setColor] = useState({\n    displayColorPicker: false,\n    changeColor: \"#18e7f4\",\n    defaultColor: \"#18e7f4\",\n    color: {\n      r: \"26\",\n      g: \"230\",\n      b: \"244\",\n      a: \"1\",\n    },\n  });\n\n  const colors = [\"#18e7f4\", \" #ed90fc\", \"#ffe142\", \"#f28c2d\", \"#93f764\"];\n\n  const [anchor, setAnchor] = useState(null);\n  const handleChangeColor = (color) => {\n    deleteClassActive();\n    setColor({ ...color, color: color.rgb, changeColor: color.hex });\n  };\n\n  const handleOpenPicker = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClosePicker = () => {\n    setAnchor(null);\n  };\n  const handleColorRectClick = (event, background) => {\n    deleteClassActive();\n    setColor({ ...color, changeColor: background });\n\n    event.target.classList.add(\"color_active\");\n  };\n\n  const deleteClassActive = () => {\n    let colorsRect = document.querySelectorAll(\".branding__color\");\n    colorsRect.forEach((color) => {\n      color.classList.remove(\"color_active\");\n    });\n  };\n  const open = Boolean(anchor);\n  const brightness = Math.round(\n    (parseInt(color.color.r) * 299 +\n      parseInt(color.color.g) * 587 +\n      parseInt(color.color.b) * 114) /\n      1000\n  );\n  const textColour = brightness > 125 ? \"black\" : \"white\";\n\n  return (\n    <div>\n      <div className=\"branding_container_colors\">\n        {colors.map((color, idx) => (\n          <div\n            style={{ background: color }}\n            className=\"branding__color\"\n            onClick={(e) => {\n              handleColorRectClick(e, color);\n            }}\n            key={idx}\n          ></div>\n        ))}\n        <IconButton className=\"branding__color\" onClick={handleOpenPicker}>\n          <AddIcon fontSize=\"large\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchor}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={open}\n          onClose={handleClosePicker}\n        >\n          <ChromePicker color={color.color} onChange={handleChangeColor} />\n        </Popover>\n      </div>\n      <div className=\"branding_container_picker\">\n        <input\n          style={{ backgroundColor: color.changeColor, color: textColour }}\n          value={color.changeColor}\n          className=\"branding__input\"\n          readOnly\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}