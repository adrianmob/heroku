{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Desktop/heroku/src/components/user/Validacion/Validacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../../hooks/useStyle\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Alerta } from \"../Alerta\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Validacion = () => {\n  _s();\n\n  const {\n    host,\n    email,\n    phone\n  } = useSelector(state => state.registro);\n  const history = useHistory();\n  const classes = useStyles();\n  const [{\n    open,\n    message,\n    emoji,\n    success\n  }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\",\n    success: false\n  });\n  const [errors, setErrors] = useState({});\n  const [{\n    codigo\n  }, handleChange] = useForm({\n    codigo: \"\"\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\",\n      success: false\n    });\n    if (success) history.push(\"/auth/user/create_password\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = validForm();\n\n    if (Object.keys(errors).length === 0) {\n      try {\n        const {\n          data\n        } = await axios.post(\"https://kikoya-portal.herokuapp.com/api/v1/enrollment/validate/\", {\n          host,\n          otp: codigo,\n          email,\n          phone\n        });\n        if (data.result == \"Ok\") updAlerta(\"Se validó tu código con éxito.\", \"✅\", true);\n      } catch (error) {\n        console.log(error.response);\n        updAlerta(\"Código inválido.\", \"⛔\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji, success = false) => {\n    setOpen({\n      open: true,\n      message,\n      emoji,\n      success\n    });\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n\n    if (validator.isEmpty(codigo)) {\n      errors.codigo = \"Campo requerido.\";\n    }\n\n    setErrors(errors);\n    return errors;\n  };\n\n  const handleInputPress = e => {\n    let error = \"\";\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors,\n      [e.target.name]: error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registro__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro__form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titulo\",\n          children: \"Ya estas a unos pasos \\uD83D\\uDE4C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"informacion_parrafo\",\n          children: \"Te llegar\\xE1 un c\\xF3digo el cual deberas ingresar y posteriormente debes presionar el bot\\xF3n \\u201CValidar C\\xF3digo\\u201D para continuar con tu registro, recuerda que el c\\xF3digo dura 5 minutos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registro__containerInput\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"registro__input\",\n            label: \"Codigo\",\n            name: \"codigo\",\n            size: \"small\",\n            value: codigo,\n            onChange: handleChange,\n            onKeyUp: handleInputPress,\n            error: errors.codigo ? true : false,\n            helperText: errors.codigo && errors.codigo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: classes.primary,\n          style: {\n            width: \"100%\",\n            display: \"block\",\n            padding: \"15px 0\",\n            margin: \"15px 0\",\n            maxWidth: \"400px\"\n          },\n          type: \"submit\",\n          children: \"VALIDAR C\\xD3DIGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            display: \"block\",\n            margin: \"8px 0\"\n          },\n          className: \"forgotPass\",\n          children: \"\\xBFNo recibiste tu NIP? Reenviar c\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"capaLogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alerta, {\n      open: open,\n      message: message,\n      emoji: emoji,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Validacion, \"Dc6vEPtpswOo9dmsczMJPnmskDc=\", false, function () {\n  return [useSelector, useHistory, useStyles, useForm];\n});\n\n_c = Validacion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validacion\");","map":{"version":3,"sources":["/Users/adrian/Desktop/heroku/src/components/user/Validacion/Validacion.js"],"names":["React","useState","TextField","Button","useStyles","useForm","Alerta","useHistory","Link","validator","axios","useSelector","Validacion","host","email","phone","state","registro","history","classes","open","message","emoji","success","setOpen","errors","setErrors","codigo","handleChange","handleClose","push","handleSubmit","e","preventDefault","validForm","Object","keys","length","data","post","otp","result","updAlerta","error","console","log","response","isEmpty","handleInputPress","target","value","name","primary","width","display","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../../hooks/useStyle\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Alerta } from \"../Alerta\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nexport const Validacion = () => {\n  const { host, email, phone } = useSelector((state) => state.registro);\n  const history = useHistory();\n  const classes = useStyles();\n  const [{ open, message, emoji, success }, setOpen] = useState({\n    open: false,\n    message: \"\",\n    emoji: \"\",\n    success: false,\n  });\n  const [errors, setErrors] = useState({});\n\n  const [{ codigo }, handleChange] = useForm({\n    codigo: \"\",\n  });\n\n  const handleClose = () => {\n    setOpen({\n      open: false,\n      message: \"\",\n      emoji: \"\",\n      success: false,\n    });\n    if (success) history.push(\"/auth/user/create_password\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = validForm();\n    if (Object.keys(errors).length === 0) {\n      try {\n        const { data } = await axios.post(\n          \"https://kikoya-portal.herokuapp.com/api/v1/enrollment/validate/\",\n          {\n            host,\n            otp: codigo,\n            email,\n            phone,\n          }\n        );\n\n        if (data.result == \"Ok\")\n          updAlerta(\"Se validó tu código con éxito.\", \"✅\", true);\n      } catch (error) {\n        console.log(error.response);\n        updAlerta(\"Código inválido.\", \"⛔\");\n      }\n    }\n  };\n\n  const updAlerta = (message, emoji, success = false) => {\n    setOpen({\n      open: true,\n      message,\n      emoji,\n      success,\n    });\n  };\n\n  const validForm = () => {\n    setErrors({});\n    let errors = {};\n\n    if (validator.isEmpty(codigo)) {\n      errors.codigo = \"Campo requerido.\";\n    }\n\n    setErrors(errors);\n\n    return errors;\n  };\n\n  const handleInputPress = (e) => {\n    let error = \"\";\n\n    if (validator.isEmpty(e.target.value)) {\n      error = \"Campo obligatorio\";\n    }\n\n    setErrors({ ...errors, [e.target.name]: error });\n  };\n\n  return (\n    <div className=\"registro__container\">\n      <div className=\"registro__form\">\n        <form onSubmit={handleSubmit}>\n          <h1 className=\"titulo\">Ya estas a unos pasos 🙌</h1>\n          <p className=\"informacion_parrafo\">\n            Te llegará un código el cual deberas ingresar y posteriormente debes\n            presionar el botón “Validar Código” para continuar con tu registro,\n            recuerda que el código dura 5 minutos.\n          </p>\n          <div className=\"registro__containerInput\">\n            <TextField\n              className=\"registro__input\"\n              label=\"Codigo\"\n              name=\"codigo\"\n              size=\"small\"\n              value={codigo}\n              onChange={handleChange}\n              onKeyUp={handleInputPress}\n              error={errors.codigo ? true : false}\n              helperText={errors.codigo && errors.codigo}\n            />\n          </div>\n          <Button\n            variant=\"contained\"\n            className={classes.primary}\n            style={{\n              width: \"100%\",\n              display: \"block\",\n              padding: \"15px 0\",\n              margin: \"15px 0\",\n              maxWidth: \"400px\",\n            }}\n            type=\"submit\"\n          >\n            VALIDAR CÓDIGO\n          </Button>\n          <Link\n            style={{ display: \"block\", margin: \"8px 0\" }}\n            className=\"forgotPass\"\n          >\n            ¿No recibiste tu NIP? Reenviar código\n          </Link>\n        </form>\n      </div>\n      <div className=\"capaLogo\"></div>\n      <Alerta\n        open={open}\n        message={message}\n        emoji={emoji}\n        handleClose={handleClose}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}